"use strict";angular.module("mc-drag-and-drop.mcAnimation",[]).factory("mcAnimation",[function(){var _public={};_public.requestFrame=function(callbackFunc){requestAnimationFrame(callbackFunc)};var requestAnimationFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}}();return _public.startAnimation=function(startAnimation,animationLoop,endAnimation,continueAnimation){var loop=function(){animationLoop(),continueAnimation()?requestAnimationFrame(loop):endAnimation()};startAnimation(),requestAnimationFrame(loop)},_public}]),angular.module("mc-drag-and-drop.mcCollisions",["mc-drag-and-drop.mcCss"]).factory("mcCollisions",["mcCss",function(){var _public={};_public.getElementDimensions=function(element){var jqElement=$(element),offset=jqElement.offset(),width=jqElement.width(),height=jqElement.height();return{element:element,jqElement:jqElement,width:width,height:height,left:offset.left,right:offset.left+width,top:offset.top,bottom:offset.top+height}},_public.getTranslatedDimensions=function(dimensions,translation){var newDimensions={};return newDimensions.width=dimensions.width,newDimensions.height=dimensions.height,newDimensions.left=dimensions.left+translation.x,newDimensions.right=dimensions.right+translation.x,newDimensions.top=dimensions.top+translation.y,newDimensions.bottom=dimensions.bottom+translation.y,newDimensions},_public.getBoundedPosition=function(unboundedPosition,elementDimensions,translationBounds){var newPosition={},attemptedDimensions=_public.getTranslatedDimensions(elementDimensions,unboundedPosition);return newPosition.x=attemptedDimensions.left<=translationBounds.left?translationBounds.left-elementDimensions.left:attemptedDimensions.right>=translationBounds.right?translationBounds.right-elementDimensions.right:unboundedPosition.x,newPosition.y=attemptedDimensions.top<=translationBounds.top?translationBounds.top-elementDimensions.top:attemptedDimensions.bottom>=translationBounds.bottom?translationBounds.bottom-elementDimensions.bottom:unboundedPosition.y,newPosition};var isPointWithinBox=function(point,box){return point.x<box.right&&point.x>box.left&&point.y>box.top&&point.y<box.bottom?!0:!1};return _public.checkOverlap={cursor:function(cursorPosition,target){return isPointWithinBox(cursorPosition,target)},partial:function(elementEdges,target){var topLeft={x:elementEdges.left,y:elementEdges.top},topRight={x:elementEdges.right,y:elementEdges.top},bottomLeft={x:elementEdges.left,y:elementEdges.bottom},bottomRight={x:elementEdges.right,y:elementEdges.bottom};return isPointWithinBox(topLeft,target)||isPointWithinBox(topRight,target)||isPointWithinBox(bottomLeft,target)||isPointWithinBox(bottomRight,target)},center:function(elementEdges,target){var centerPosition={};return centerPosition.x=elementEdges.left+elementEdges.width/2,centerPosition.y=elementEdges.top+elementEdges.height/2,isPointWithinBox(centerPosition,target)},complete:function(elementEdges,target){var topLeft={x:elementEdges.left,y:elementEdges.top},bottomRight={x:elementEdges.right,y:elementEdges.bottom};return isPointWithinBox(topLeft,target)&&isPointWithinBox(bottomRight,target)}},_public.findOverlap=function(position,targets,type){for(var overlapType=type||"cursor",i=0;i<targets.length;i++)if(_public.checkOverlap[overlapType](position,targets[i]))return targets[i];return!1},_public}]),angular.module("mc-drag-and-drop.mcCss",[]).factory("mcCss",[function(){var _public={};return _public.translateElement=function(element,position){element.style.transform="translate3d("+position.x+"px, "+position.y+"px, 0px)"},_public.removeTranslation=function(element){element.style.transform="translate3d( 0, 0, 0)"},_public.hasClass=function(element,className){element.classList.contains(className)},_public.addClass=function(element,className){element.classList.add(className)},_public.removeClass=function(element,className){element.classList.remove(className)},_public.toggleClass=function(element,className){element.classList.toggle(className)},_public.addClasses=function(element,classNames){for(var i=classNames.length-1;i>=0;i--)_public.addClass(element,classNames[i])},_public.removeClasses=function(element,classNames){for(var i=classNames.length-1;i>=0;i--)_public.removeClass(element,classNames[i])},_public.setAttribute=function(element,attribute,value){element.setAttribute(attribute,value)},_public.findByAttribute=function(attribute,elementToSearch){var element=elementToSearch||document;return element.querySelector(attribute)},_public.findAllByAttribute=function(attribute,elementToSearch){var element=elementToSearch||document;return element.querySelectorAll(attribute)},_public}]),angular.module("mc-drag-and-drop.mcDraggable",["mc-drag-and-drop.mcCss","mc-drag-and-drop.mcCollisions","mc-drag-and-drop.mcAnimation","mc-drag-and-drop.mcEvents"]).factory("DropTargets",["$rootScope","mcCss","mcCollisions","mcEvents",function($rootScope,mcCss,mcCollisions,mcEvents){var DropTargets=function(){var currentTarget,previousTarget,targetList=[],targetConfig=[],setTargetConfig=function(newTargetConfig){targetConfig=newTargetConfig||[],updateTargetList()},updateTargetList=function(){targetList=[];for(var i=0;i<targetConfig.length;i++)for(var attributeName="[mc-droppable="+targetConfig[i].type+"]",elementList=mcCss.findAllByAttribute(attributeName),j=0;j<elementList.length;j++){var tempTarget=constructTarget(elementList[j],targetConfig[i]);targetList.push(tempTarget)}};mcEvents.addEventListener(window,"resize",updateTargetList);var constructTarget=function(element,targetInfo){var tempTarget=mcCollisions.getElementDimensions(element);return mcCss.addClass(tempTarget.element,"droppable"),tempTarget.onDrop=targetInfo.onDrop,tempTarget.onHover=targetInfo.onHover,tempTarget},setCurrentTarget=function(cursorPosition,elementPosition,elementDimensions,collisionType){var positionDetails;positionDetails="cursor"!==collisionType?mcCollisions.getTranslatedDimensions(elementDimensions,elementPosition):cursorPosition,currentTarget=mcCollisions.findOverlap(positionDetails,targetList,collisionType)},getCurrentTarget=function(){return currentTarget},setPreviousTarget=function(setTo){previousTarget=setTo},getPreviousTarget=function(){return previousTarget},callDropEvent=function(callArguments){currentTarget.onDrop&&currentTarget.onDrop(callArguments),$rootScope.$apply(),currentTarget=!1},callHoverEvent=function(callArguments){currentTarget.onHover&&currentTarget.onHover(callArguments),$rootScope.$apply()};return{setTargetConfig:setTargetConfig,setCurrentTarget:setCurrentTarget,getCurrentTarget:getCurrentTarget,setPreviousTarget:setPreviousTarget,getPreviousTarget:getPreviousTarget,callDropEvent:callDropEvent,callHoverEvent:callHoverEvent}};return DropTargets}]).directive("mcDraggable",["mcAnimation","mcCss","mcCollisions","mcEvents","DropTargets",function(mcAnimation,mcCss,mcCollisions,mcEvents,DropTargets){return{restrict:"A",scope:{targets:"=",returnedInfo:"=",collisionDetection:"=",confineTo:"="},link:function(scope,element){var body,rootElement,grabbableElement,elementDimensions,collisionDetection,elementConfinedTo,translationBounds,isCurrentlyMoving,dragEvents,targets,classesWhileAnimating=["being-dragged"],classesWhileNotAnimating=["return-animation"],defaultCollision="cursor",defaultBounds="html",emptyCoordinates={x:0,y:0},initialEventPosition=emptyCoordinates,cursorPosition=emptyCoordinates,elementPosition=emptyCoordinates,setupDirective=function(){body=mcCss.findByAttribute("body"),rootElement=element[0],grabbableElement=mcCss.findByAttribute("[grabbable]",rootElement)||rootElement,mcCss.addClass(rootElement,"draggable"),mcCss.addClass(grabbableElement,"grabbable"),elementConfinedTo=scope.confineTo||defaultBounds,collisionDetection=scope.collisionDetection||defaultCollision,elementDimensions=mcCollisions.getElementDimensions(rootElement),translationBounds=mcCollisions.getElementDimensions(elementConfinedTo),targets=new DropTargets,targets.setTargetConfig(scope.targets),dragEvents=mcEvents.getDragEvents(),mcEvents.addEventListener(grabbableElement,dragEvents.start,startEventHandler)},startEventHandler=function(event){isCurrentlyMoving=!0,elementDimensions=mcCollisions.getElementDimensions(element),translationBounds=mcCollisions.getElementDimensions(elementConfinedTo),initialEventPosition=mcEvents.getEventCoordinates(event),cursorPosition=mcEvents.getEventCoordinates(event),mcEvents.addEventListener(document,dragEvents.move,moveEventHandler),mcEvents.addEventListener(document,dragEvents.stop,stopEventHandler),mcAnimation.startAnimation(startAnimation,moveAnimation,endAnimation,continueAnimation)},moveEventHandler=function(event){cursorPosition=mcEvents.getEventCoordinates(event);var unboundedPosition=mcEvents.diffPositions(cursorPosition,initialEventPosition);elementPosition=mcCollisions.getBoundedPosition(unboundedPosition,elementDimensions,translationBounds),targets.setCurrentTarget(cursorPosition,elementPosition,elementDimensions,collisionDetection);targets.callHoverEvent(scope.returnedInfo)},stopEventHandler=function(){targets.callDropEvent(scope.returnedInfo),isCurrentlyMoving=!1,initialEventPosition=emptyCoordinates,elementPosition=emptyCoordinates,cursorPosition=emptyCoordinates,mcEvents.removeListener(document,dragEvents.move,moveEventHandler),mcEvents.removeListener(document,dragEvents.stop,stopEventHandler)},startAnimation=function(){mcCss.removeClasses(rootElement,classesWhileNotAnimating),mcCss.addClasses(rootElement,classesWhileAnimating),mcCss.addClass(body,"no-select")},moveAnimation=function(){mcCss.translateElement(rootElement,elementPosition),targets.getPreviousTarget()&&mcCss.removeClass(targets.getPreviousTarget().element,"hover"),targets.getCurrentTarget()&&(mcCss.addClass(targets.getCurrentTarget().element,"hover"),targets.setPreviousTarget(targets.getCurrentTarget()))},endAnimation=function(){mcCss.removeClass(body,"no-select"),mcCss.removeClasses(rootElement,classesWhileAnimating),mcCss.addClasses(rootElement,classesWhileNotAnimating),mcCss.removeTranslation(rootElement)},continueAnimation=function(){return isCurrentlyMoving};setupDirective()}}}]),angular.module("mc-drag-and-drop.mcEvents",[]).factory("mcEvents",["hasTouchEvents","isAndroid",function(hasTouchEvents,isAndroid){var _public={};return _public.getDragEvents=function(){return{start:hasTouchEvents?"touchstart":"mousedown",move:hasTouchEvents?"touchmove":"mousemove",stop:hasTouchEvents?"touchend":"mouseup"}},_public.getEventCoordinates=function(event){return{x:isAndroid?event.changedTouches[0].pageX:event.pageX,y:isAndroid?event.changedTouches[0].pageY:event.pageY}},_public.diffPositions=function(a,b){return{x:a.x-b.x,y:a.y-b.y}},_public.addEventListener=function(watchedElement,event,onEvent){watchedElement.addEventListener(event,onEvent,!1)},_public.removeListener=function(watchedElement,event,onEvent){watchedElement.removeEventListener(event,onEvent,!1)},_public.addWindowResizeListener=function(callback){window.addEventListener("resize",callback)},_public}]),angular.module("mc-drag-and-drop",["mc-drag-and-drop.mcCss","mc-drag-and-drop.mcCollisions","mc-drag-and-drop.mcAnimation","mc-drag-and-drop.mcEvents","mc-drag-and-drop.mcDraggable","mc-drag-and-drop.mcSortable"]).value("isAndroid",/Android/i.test(navigator.userAgent)).value("hasTouchEvents",/webOS|Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)),angular.module("mc-drag-and-drop.mcSortable",["mc-drag-and-drop.mcDraggable"]).directive("mcSortableContainer",["$compile","mcAnimation","mcCss","mcCollisions","mcEvents","DropTargets",function(){return{restrict:"A",scope:{sortBy:"=",hoverTemplate:"="},compile:function(element){var targetType=element.attr("mc-sortable-container");element.attr("mc-droppable",targetType);for(var childrenNodes=element.children(),i=0;i<childrenNodes.length;i++){var child=$(childrenNodes[i]),repeats=child.attr("mc-sortable-item"),individualRepeatName=repeats.split(" in ")[0];child.attr("targets",individualRepeatName+".targets"),child.attr("returned-info",individualRepeatName),child.attr("confine-to","'body'"),child.attr("collision-detection","'center'"),child.attr("mc-draggable",""),child.attr("ng-repeat",repeats)}return element.removeAttr("mc-sortable-container"),{pre:function(){},post:function(scope,iElement){function translate(){for(var i=0;i<iElement.children().length;i++);}scope.$watch(iElement.children().length,translate)}}}}}]);