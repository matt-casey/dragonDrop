"use strict";angular.module("mc-drag-and-drop.mcAnimation",[]).factory("mcAnimation",[function(){var _public={};_public.requestFrame=function(callbackFunc){requestAnimationFrame(callbackFunc)};var requestAnimationFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)}}();return _public}]),angular.module("mc-drag-and-drop.mcCss",[]).factory("mcCss",[function(){var _public={};return _public.translateElement=function(jqElement,position){jqElement.css("-webkit-transform","translate3d("+position.x+"px, "+position.y+"px, 0px)")},_public.removeTranslation=function(jqElement){jqElement.css("-webkit-transform","translate3d( 0, 0, 0)")},_public.hasClass=function(jqElement,className){jqElement[0].classList.contains(className)},_public.addClass=function(jqElement,className){jqElement[0].classList.add(className)},_public.removeClass=function(jqElement,className){jqElement[0].classList.remove(className)},_public.getElementDimensions=function(element){var jqElement=$(element),offset=jqElement.offset();return{element:element,jqElement:jqElement,left:offset.left,right:offset.left+jqElement.width(),top:offset.top,bottom:offset.top+jqElement.height()}},_public.checkOverlap={cursor:function(position,dropped){return position.x<dropped.right&&position.x>dropped.left&&position.y>dropped.top&&position.y<dropped.bottom?!0:!1},partial:function(){},centerOfMass:function(){},complete:function(){}},_public}]),angular.module("mc-drag-and-drop.mcDraggable",["mc-drag-and-drop.mcCss","mc-drag-and-drop.mcAnimation","mc-drag-and-drop.mcEvents"]).directive("mcDraggable",["mcAnimation","mcCss","mcEvents",function(mcAnimation,mcCss,mcEvents){var emptyCoordinates={x:0,y:0};return{restrict:"A",scope:{targets:"="},link:function(scope,element){var dropTargets,currentTarget,isCurrentlyMoving,events,initialEventPosition=emptyCoordinates,cursorPosition=emptyCoordinates,elementPosition=emptyCoordinates,setupDirective=function(){setupElementStyling(),dropTargets=getDropTargets(),events=mcEvents.getEvents(),mcEvents.addEventListener(element[0],events.start,startEventHandler)},setupElementStyling=function(){mcCss.addClass(element,"draggable")},getDropTargets=function(){for(var tempTargets=[],i=0;i<scope.targets.length;i++){console.log("ok",scope.targets);for(var elementList=document.querySelectorAll("[mc-droppable="+scope.targets[i].type+"]"),j=0;j<elementList.length;j++){var target=mcCss.getElementDimensions(elementList[j]);mcCss.addClass(target.jqElement,"droppable"),tempTargets.push(target)}}return tempTargets},getCurrentTarget=function(){for(var i=0;i<dropTargets.length;i++)if(mcCss.checkOverlap.cursor(cursorPosition,dropTargets[i]))return dropTargets[i];return!1},removeHoverFromAll=function(){for(var i=0;i<dropTargets.length;i++)mcCss.removeClass(dropTargets[i].jqElement,"hover")},callDropEvent=function(){try{currentTarget.onDrop(element,scope)}catch(err){currentTarget.onError&&currentTarget.onError(err)}scope.$apply()},startEventHandler=function(event){isCurrentlyMoving=!0,initialEventPosition=mcEvents.getEventCoordinates(event),cursorPosition=mcEvents.getEventCoordinates(event),mcEvents.addEventListener(document,events.move,moveEventHandler),mcEvents.addEventListener(document,events.stop,stopEventHandler),startAnimation()},moveEventHandler=function(event){cursorPosition=mcEvents.getEventCoordinates(event),currentTarget=getCurrentTarget(),elementPosition=mcEvents.diffPositions(cursorPosition,initialEventPosition)},stopEventHandler=function(){currentTarget&&(callDropEvent(),currentTarget=!1),isCurrentlyMoving=!1,initialEventPosition=emptyCoordinates,elementPosition=emptyCoordinates,cursorPosition=emptyCoordinates,mcEvents.removeListener(document,events.move,moveEventHandler),mcEvents.removeListener(document,events.stop,stopEventHandler)},startAnimation=function(){mcCss.removeClass(element,"return-animation"),mcCss.addClass(element,"being-dragged"),mcAnimation.requestFrame(animationLoop)},animationLoop=function(){mcCss.translateElement(element,elementPosition),removeHoverFromAll(),currentTarget&&mcCss.addClass(currentTarget.jqElement,"hover"),isCurrentlyMoving?mcAnimation.requestFrame(animationLoop):endAnimation()},endAnimation=function(){removeHoverFromAll(),mcCss.removeClass(element,"being-dragged"),mcCss.addClass(element,"return-animation"),mcCss.removeTranslation(element)};setupDirective()}}}]),angular.module("mc-drag-and-drop.mcEvents",[]).factory("mcEvents",["hasTouchEvents","isAndroid",function(hasTouchEvents,isAndroid){var _public={};return _public.getEvents=function(){return{start:hasTouchEvents?"touchstart":"mousedown",move:hasTouchEvents?"touchmove":"mousemove",stop:hasTouchEvents?"touchend":"mouseup"}},_public.getEventCoordinates=function(event){return{x:isAndroid?event.changedTouches[0].pageX:event.pageX,y:isAndroid?event.changedTouches[0].pageY:event.pageY}},_public.diffPositions=function(a,b){return{x:a.x-b.x,y:a.y-b.y}},_public.addEventListener=function(watchedElement,event,onEvent){watchedElement.addEventListener(event,onEvent,!1)},_public.removeListener=function(watchedElement,event,onEvent){watchedElement.removeEventListener(event,onEvent,!1)},_public}]),angular.module("mc-drag-and-drop",["mc-drag-and-drop.mcCss","mc-drag-and-drop.mcAnimation","mc-drag-and-drop.mcEvents","mc-drag-and-drop.mcDraggable","mc-drag-and-drop.mcSortable"]).value("isAndroid",/Android/i.test(navigator.userAgent)).value("hasTouchEvents",/webOS|Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)),angular.module("mc-drag-and-drop.mcSortable",[]);